
const columnHelper = createColumnHelper()


const columns = [
    columnHelper.accessor('gin', {
        header: 'Gin',
        cell: info => info.getValue(),

    }),
    columnHelper.accessor('type', {
        header: 'Type',
        cell: info => info.getValue(),
    }),
    columnHelper.accessor('date', {
        header: 'Date',
        cell: info => info.getValue(),
    }),
    columnHelper.accessor('location', {
        header: 'Location',
        cell: info => info.getValue(),
    }),
    columnHelper.accessor('status', {
        header: 'Status',
        cell: info => info.getValue(),
    }),
]
export default function Page(props) {
    const [data, setData] = useState(() => [...props.data]);
    const table = useReactTable({
        columns,
        data,
        getCoreRowModel: getCoreRowModel(),
    });


    return (
        <>
            <table>
                <thead>
                {table.getHeaderGroups().map(headerGroup => (
                    <tr key={headerGroup.id}>
                        {headerGroup.headers.map(header => (
                            <th key={header.id}>
                                {flexRender(
                                        header.column.columnDef.header,
                                        header.getContext()
                                )}
                            </th>
                        ))}
                    </tr>
                ))}
                </thead>
                <tbody>
                {table.getRowModel().rows.map(row => (
                    <tr key={row.id}>
                        {row.getVisibleCells().map(cell => (
                            <td key={cell.id}>
                                {flexRender(cell.column.columnDef.cell, cell.getContext())}
                            </td>
                        ))}
                    </tr>
                ))}
                </tbody>
            </table>